{"version":3,"sources":["components/Login.js","service/fetchActivities.js","components/ActivityItem.js","components/MainBoard.js","index.js"],"names":["Login","to","fetch","activity","json","ActivityItem","activityList","map","e","i","className","MainBoard","useState","positive","negative","activities","setActivities","currentActivity","setCurrentActivity","isClicked","setIsClicked","isLoading","setIsLoading","useEffect","setTimeout","fetchActivities","then","res","finally","handleActivitySelect","guessAnswer","type","color","height","width","disabled","onClick","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"oLAGO,SAASA,IACd,OACE,gCACE,uCACA,cAAC,IAAD,CAAMC,GAAG,cAAT,SACE,gD,uFCRO,8GACUC,MAAM,yCADhB,cACPC,EADO,yBAENA,EAASC,QAFH,4C,sBCER,SAASC,EAAT,GAAyC,IAAjBC,EAAgB,EAAhBA,aAC7B,GAAKA,EAGL,OAAOA,EAAaC,KAAI,SAACC,EAAGC,GAAJ,OACtB,oBAAIC,UAAU,gBAAd,SACGF,GADgCC,M,qBCDhC,SAASE,IACd,MAAoCC,mBAAS,CAC3CC,SAAU,GACVC,SAAU,KAFZ,mBAAOC,EAAP,KAAmBC,EAAnB,KAIA,EAA8CJ,qBAA9C,mBAAOK,EAAP,KAAwBC,EAAxB,KAEA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkCR,oBAAS,GAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,GAAa,GACbE,YAAW,YFlBA,WAAf,gCEmBMC,GACGC,MAAK,SAACC,GAAD,OAAST,EAAmBS,EAAIxB,aACrCyB,SAAQ,kBAAMN,GAAa,QAC7B,OACF,CAACH,IAIJ,SAASU,EAAqBC,GACxBA,GACFd,EAAc,CACZH,SAAS,GAAD,mBAAME,EAAWF,UAAjB,CAA2BI,IACnCH,SAAS,YAAKC,EAAWD,YAE3BM,GAAcD,KAEdH,EAAc,CACZH,SAAS,YAAKE,EAAWF,UACzBC,SAAS,GAAD,mBAAMC,EAAWD,UAAjB,CAA2BG,MAGrCG,GAAcD,IAGlB,OACE,sBAAKT,UAAU,8BAAf,UACE,4DACA,qBAAKA,UAAU,mBAAf,SACGW,EACC,cAAC,IAAD,CACEX,UAAU,kBACVqB,KAAK,OACLC,MAAO,QACPC,OAAQ,GACRC,MAAO,KAGT,4BAAIjB,MAIR,sBAAKP,UAAU,WAAf,UACE,wBACEyB,SAAUd,EACVX,UAAU,WACV0B,QAAS,kBAAMP,EAvCH,OAoCd,oBAOA,wBACEM,SAAUd,EACVX,UAAU,8BACV0B,QAAS,kBAAMP,GAAqB,IAHtC,uBASF,sBAAKnB,UAAU,kBAAf,UACE,qBAAIA,UAAU,gBAAd,UACE,qDACA,cAACL,EAAD,CAAcC,aAAcS,EAAWF,cAEzC,qBAAIH,UAAU,gBAAd,UACE,qDACA,cAACL,EAAD,CAAcC,aAAcS,EAAWD,oB,MC7EjD,SAASuB,IACP,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAACvC,EAAD,MACzB,cAAC,IAAD,CAAOsC,KAAK,aAAaC,QAAS,cAAC5B,EAAD,SAK3B6B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAD,UACE,cAACP,EAAD,S","file":"static/js/main.d7db37e5.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport function Login() {\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Link to=\"/activities\">\r\n        <button>Login</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export default async function fetchActivities() {\r\n  const activity = await fetch(\"https://www.boredapi.com/api/activity\");\r\n  return activity.json();\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport function ActivityItem({ activityList }) {\r\n  if (!activityList) {\r\n    return;\r\n  }\r\n  return activityList.map((e, i) => (\r\n    <li className=\"activity-item\" key={i}>\r\n      {e}\r\n    </li>\r\n  ));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport fetchActivities from \"../service/fetchActivities\";\r\nimport { ActivityItem } from \"./ActivityItem\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nexport function MainBoard() {\r\n  const [activities, setActivities] = useState({\r\n    positive: [],\r\n    negative: [],\r\n  });\r\n  const [currentActivity, setCurrentActivity] = useState();\r\n\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      fetchActivities()\r\n        .then((res) => setCurrentActivity(res.activity))\r\n        .finally(() => setIsLoading(false));\r\n    }, 300);\r\n  }, [isClicked]);\r\n\r\n  const guessAnswer = true;\r\n\r\n  function handleActivitySelect(guessAnswer) {\r\n    if (guessAnswer) {\r\n      setActivities({\r\n        positive: [...activities.positive, currentActivity],\r\n        negative: [...activities.negative],\r\n      });\r\n      setIsClicked(!isClicked);\r\n    } else {\r\n      setActivities({\r\n        positive: [...activities.positive],\r\n        negative: [...activities.negative, currentActivity],\r\n      });\r\n\r\n      setIsClicked(!isClicked);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"content-container container\">\r\n      <h1>Choose what to do with it?</h1>\r\n      <div className=\"current-activity\">\r\n        {isLoading ? (\r\n          <ReactLoading\r\n            className=\"disable-margins\"\r\n            type=\"spin\"\r\n            color={\"black\"}\r\n            height={40}\r\n            width={40}\r\n          />\r\n        ) : (\r\n          <p>{currentActivity}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button\r\n          disabled={isLoading}\r\n          className=\"button-3\"\r\n          onClick={() => handleActivitySelect(guessAnswer)}\r\n        >\r\n          Select\r\n        </button>\r\n        <button\r\n          disabled={isLoading}\r\n          className=\"button-3 button-3--negative\"\r\n          onClick={() => handleActivitySelect(!guessAnswer)}\r\n        >\r\n          Reject\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"lists-container\">\r\n        <ul className=\"activity-list\">\r\n          <h2>Selected activities</h2>\r\n          <ActivityItem activityList={activities.positive} />\r\n        </ul>\r\n        <ul className=\"activity-list\">\r\n          <h2>Rejected activities</h2>\r\n          <ActivityItem activityList={activities.negative} />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Login } from \"./components/Login\";\r\nimport { MainBoard } from \"./components/MainBoard\";\r\nimport \"./index.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Login />} />\r\n      <Route path=\"activities\" element={<MainBoard />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n"],"sourceRoot":""}