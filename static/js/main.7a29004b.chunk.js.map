{"version":3,"sources":["components/Login.js","service/fetchActivities.js","components/ActivityItem.js","components/ActivityList.js","components/MainBoard.js","index.js"],"names":["Login","to","fetch","activity","json","ActivityItem","typeListItem","selectedClick","id","selected","console","log","itemsTitle","items","Array","from","className","onClick","length","map","e","i","ActivityList","typeLists","Object","entries","useState","isListSelected","setIsListSelected","handleClick","prevSelectedValues","updatedSelectedValues","sort","MainBoard","currentActivity","setCurrentActivity","prevActivities","setPrevActivities","isClicked","setIsClicked","isLoading","setIsLoading","positiveItems","setPositiveItems","negativeItems","setNegativeItems","useEffect","fetchActivities","then","res","includes","handleSetItem","setItem","type","prevState","Set","handleActivitySelect","guessAnswer","color","height","width","disabled","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7a29004b.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport function Login() {\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Link to=\"/activities\">\r\n        <button>Login</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","export default async function fetchActivities() {\r\n  const activity = await fetch(\"https://www.boredapi.com/api/activity\");\r\n  return activity.json();\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport function ActivityItem({ typeListItem, selectedClick, id, selected }) {\r\n  console.log(typeListItem);\r\n  const itemsTitle = typeListItem[0];\r\n  const items = Array.from(typeListItem[1]);\r\n\r\n  function renderList() {\r\n    return (\r\n      <div>\r\n        <h3\r\n          className=\"activity-item__title\"\r\n          onClick={() => {\r\n            selectedClick(id);\r\n          }}\r\n        >\r\n          {itemsTitle}\r\n          {\"(\" + items.length + \")\"}\r\n        </h3>\r\n        <ul className={selected ? \"type-list\" : \"type-list visually-hidden\"}>\r\n          {items.map((e, i) => {\r\n            return <li key={i}>{e}</li>;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{renderList()}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { ActivityItem } from \"./ActivityItem\";\r\n\r\nexport function ActivityList({ typeLists }) {\r\n  console.log(typeLists);\r\n  console.log(\"Entries: \", Object.entries(typeLists));\r\n  const [isListSelected, setIsListSelected] = useState([]);\r\n\r\n  function handleClick(i) {\r\n    console.log(\"In handle click: \", i);\r\n    const prevSelectedValues = [...isListSelected];\r\n    console.log(\"Arr:  \", prevSelectedValues);\r\n    const updatedSelectedValues = [...prevSelectedValues].map(\r\n      (e) => (e = false)\r\n    );\r\n    updatedSelectedValues[i] = !isListSelected[i];\r\n\r\n    setIsListSelected([...updatedSelectedValues]);\r\n  }\r\n  return (\r\n    <>\r\n      {Object.entries(typeLists)\r\n        .sort()\r\n        .map((typeListItem, i) => {\r\n          return (\r\n            <ActivityItem\r\n              key={i}\r\n              id={i}\r\n              selected={isListSelected[i]}\r\n              typeListItem={typeListItem}\r\n              selectedClick={handleClick}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport fetchActivities from \"../service/fetchActivities\";\r\nimport { ActivityItem } from \"./ActivityItem\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { ActivityList } from \"./ActivityList\";\r\n\r\nexport function MainBoard() {\r\n  const [currentActivity, setCurrentActivity] = useState();\r\n  const [prevActivities, setPrevActivities] = useState([]);\r\n\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [positiveItems, setPositiveItems] = useState({});\r\n  const [negativeItems, setNegativeItems] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchActivities().then((res) => {\r\n      setIsLoading(true);\r\n      if (\r\n        prevActivities.length !== 0 &&\r\n        prevActivities.includes(res.activity)\r\n      ) {\r\n        setIsClicked(!isClicked);\r\n      } else {\r\n        setCurrentActivity(res);\r\n        setPrevActivities([...prevActivities, res.activity]);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n    // .finally(() => {\r\n    // });\r\n  }, [isClicked]);\r\n  const guessAnswer = true;\r\n\r\n  function handleSetItem(res, setItem, items) {\r\n    const { activity, type } = res;\r\n    if (!items[type]) {\r\n      console.log(items);\r\n      setItem((prevState) => ({ ...prevState, [type]: [activity] }));\r\n    } else {\r\n      setItem((prevState) => ({\r\n        ...prevState,\r\n        [type]: new Set([...prevState[type], activity]),\r\n      }));\r\n    }\r\n  }\r\n\r\n  function handleActivitySelect(guessAnswer) {\r\n    if (guessAnswer) {\r\n      handleSetItem(currentActivity, setPositiveItems, positiveItems);\r\n\r\n      setIsClicked(!isClicked);\r\n    } else {\r\n      handleSetItem(currentActivity, setNegativeItems, negativeItems);\r\n\r\n      setIsClicked(!isClicked);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"content-container container\">\r\n      <h1>Choose what to do with it?</h1>\r\n      <div className=\"current-activity\">\r\n        {isLoading ? (\r\n          <ReactLoading\r\n            className=\"disable-margins\"\r\n            type=\"spin\"\r\n            color={\"black\"}\r\n            height={40}\r\n            width={40}\r\n          />\r\n        ) : (\r\n          <p>{currentActivity.activity}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"controls\">\r\n        <button\r\n          disabled={isLoading}\r\n          className=\"button-3\"\r\n          onClick={() => handleActivitySelect(guessAnswer)}\r\n        >\r\n          Select\r\n        </button>\r\n        <button\r\n          disabled={isLoading}\r\n          className=\"button-3 button-3--negative\"\r\n          onClick={() => handleActivitySelect(!guessAnswer)}\r\n        >\r\n          Reject\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"lists-container\">\r\n        <ul className=\"activity-list\">\r\n          <h2>Selected activities</h2>\r\n          <ActivityList typeLists={positiveItems} />\r\n        </ul>\r\n        <ul className=\"activity-list\">\r\n          <h2>Rejected activities</h2>\r\n          <ActivityList typeLists={negativeItems} />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Login } from \"./components/Login\";\r\nimport { MainBoard } from \"./components/MainBoard\";\r\nimport \"./index.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/react_project_1\" element={<Login />} />\r\n      <Route path=\"/activities\" element={<MainBoard />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  // </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}